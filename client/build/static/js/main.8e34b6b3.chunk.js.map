{"version":3,"sources":["api/users.ts","features/users/usersSlice.ts","components/Spinner.tsx","components/ActiveButton.tsx","components/ErrorMessage.tsx","components/LoginPage.tsx","api/notes.ts","features/notes/noteSlice.ts","components/RegisterPage.tsx","features/notes/NoteList.tsx","hooks/useNoteList.ts","assets/images/blank-document.svg","features/notes/NoteEditor.tsx","hooks/useNoteEditor.ts","components/EditorPage.tsx","App.tsx","app/store.ts","index.tsx"],"names":["login","user","a","fetch","method","credentials","mode","body","JSON","stringify","headers","response","json","checkLogin","status","Promise","resolve","logout","register","registerAsync","createAsyncThunk","loginAsync","checkLoginAsync","logoutAsync","usersSlice","createSlice","name","initialState","isAuthenticated","loginRequest","registerRequest","logoutRequest","requestError","reducers","clearError","state","_","extraReducers","builder","addCase","pending","fulfilled","action","payload","error","actions","Spinner","props","style","display","alignItems","size","ActiveButton","classes","active","push","rounded","variant","className","split","join","children","ErrorMessage","useSelector","users","LoginPage","history","useHistory","dispatch","useDispatch","useState","username","password","errors","form","setForm","useEffect","handleChange","e","target","value","length","onSubmit","preventDefault","valid","Object","values","forEach","field","formValid","type","placeholder","onChange","to","fetchAllNotes","data","addNote","noteTemplate","Error","updateNote","input","id","deleteNote","result","fetchNotesAsync","addNoteAsync","deleteNoteAsync","noteId","saveNoteAsync","note","getState","selected","notes","noteSlice","loadState","deleteState","updateState","saveState","noteSelected","noteUpdated","currentNote","find","indexOf","title","text","unshift","noteIndex","findIndex","search","filter","selectCurrentNote","RegisterPage","fullname","NoteList","useNoteList","setActive","renderThumbVertical","map","sanitizedHtml","sanitize","allowedTags","onClick","dangerouslySetInnerHTML","__html","NoteEditor","editorState","setEditorState","setTitle","useMemo","selectedNote","useNoteEditor","onBlur","flex","src","placeholderIcon","alt","EditorPage","href","App","path","component","store","configureStore","reducer","noteReducer","usersReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e34b6b3.chunk.js","sourcesContent":["export const login = async (user: any) => {\r\n    const response = await fetch('/api/auth/signin', {\r\n        method: 'post',\r\n        credentials: 'include',\r\n        mode: 'cors',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const checkLogin = async () => {\r\n    const response = await fetch(`/api/auth/authenticated`, {\r\n        method: 'get',\r\n        credentials: 'include',\r\n        mode: 'cors',\r\n    });\r\n\r\n    if (response.status === 401) return Promise.resolve(null);\r\n    else return await response.json();\r\n};\r\n\r\nexport const logout = async () => {\r\n    const response = await fetch(`/api/auth/signout`, {\r\n        credentials: 'include',\r\n        mode: 'cors',\r\n    });\r\n    return await response.json();\r\n};\r\n\r\nexport const register = async (user: any) => {\r\n    const response = await fetch(`/api/auth/signup`, {\r\n        method: 'post',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    return await response.json();\r\n};\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { RequestState } from '../../@types/app';\r\nimport { checkLogin, login, logout, register } from '../../api/users';\r\n\r\ninterface IAuthState {\r\n    user: IUser | null;\r\n    isAuthenticated: boolean;\r\n    loginRequest: RequestState;\r\n    registerRequest: RequestState;\r\n    logoutRequest: RequestState;\r\n    requestError: string | null;\r\n}\r\n\r\ninterface IUser {\r\n    id: number;\r\n    username: string;\r\n    fullname: string;\r\n}\r\n\r\nconst initialState: IAuthState = {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    loginRequest: 'idle',\r\n    registerRequest: 'idle',\r\n    logoutRequest: 'idle',\r\n    requestError: null,\r\n};\r\n\r\nexport const registerAsync = createAsyncThunk<IUser, any>(\r\n    'register',\r\n    async (user: any) => register(user)\r\n);\r\n\r\nexport const loginAsync = createAsyncThunk<any, any>('login', async (user) =>\r\n    login(user)\r\n);\r\n\r\nexport const checkLoginAsync = createAsyncThunk<IUser | null>(\r\n    'checkAuth',\r\n    async () => checkLogin()\r\n);\r\n\r\nexport const logoutAsync = createAsyncThunk('logout', async () => logout());\r\n\r\nexport const usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {\r\n        clearError(state, _) {\r\n            state.requestError = null;\r\n        },\r\n    },\r\n    extraReducers(builder) {\r\n        builder.addCase(registerAsync.pending, (state, _) => {\r\n            state.registerRequest = 'pending';\r\n        });\r\n\r\n        builder.addCase(registerAsync.fulfilled, (state, action: any) => {\r\n            state.registerRequest = 'fulfilled';\r\n\r\n            if (action.payload.error) {\r\n                state.requestError = action.payload.error;\r\n            }\r\n        });\r\n\r\n        builder.addCase(checkLoginAsync.fulfilled, (state, action: any) => {\r\n            if (action.payload) {\r\n                state.user = action.payload.user;\r\n                state.isAuthenticated = true;\r\n            }\r\n        });\r\n\r\n        builder.addCase(loginAsync.fulfilled, (state, action) => {\r\n            if (!action.payload.error) {\r\n                state.user = action.payload.user;\r\n                state.isAuthenticated = true;\r\n            } else {\r\n                state.requestError = action.payload.error;\r\n            }\r\n        });\r\n\r\n        builder.addCase(logoutAsync.fulfilled, (state, action) => {\r\n            state.user = null;\r\n            state.isAuthenticated = false;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { clearError } = usersSlice.actions;\r\n\r\nexport default usersSlice.reducer;\r\n","import React, { PropsWithChildren } from 'react'\r\nimport { CgSpinner } from 'react-icons/cg';\r\n\r\nexport const Spinner: React.FC<PropsWithChildren<any>> = (props) => {\r\n    return (\r\n        <span {...props} style={{display: 'flex', alignItems: 'center'}}>\r\n            <CgSpinner size={props.size} />\r\n        </span>\r\n    )\r\n}\r\n","import React, { FC, PropsWithChildren } from 'react';\r\nimport { Spinner } from './Spinner';\r\n\r\ninterface IProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n    active?: boolean;\r\n    rounded?: boolean;\r\n    variant?: 'primary' | 'danger';\r\n}\r\n\r\nconst ActiveButton: FC<PropsWithChildren<IProps>> = (props) => {\r\n    const classes = ['button'];\r\n\r\n    props.active && classes.push('button--busy');\r\n    props.rounded && classes.push('button--round');\r\n    props.variant && classes.push(`button--${props.variant}`);\r\n    props.className && classes.push(...props.className.split(' '));\r\n\r\n    return (\r\n        <button {...props} className={classes.join(' ')}>\r\n            {props.active ? (\r\n                <Spinner className=\"button__spinner\" />\r\n            ) : (\r\n                props.children\r\n            )}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../app/store'\r\n\r\nexport const ErrorMessage = () => {\r\n    const { requestError } = useSelector((state: RootState) => state.users);\r\n\r\n    return (\r\n        <div className=\"form-error\">\r\n            {requestError}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearError, loginAsync } from '../features/users/usersSlice';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { RootState } from '../app/store';\r\nimport ActiveButton from './ActiveButton';\r\nimport { ErrorMessage } from './ErrorMessage';\r\nimport '../styles/auth-form.scss';\r\n\r\ninterface IFormState {\r\n    username: string | null;\r\n    password: string | null;\r\n    errors: IFormStateErrors;\r\n}\r\n\r\ninterface IFormStateErrors {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { isAuthenticated, loginRequest } = useSelector(\r\n        (state: RootState) => state.users\r\n    );\r\n    const [form, setForm] = useState<IFormState>({\r\n        username: null,\r\n        password: null,\r\n        errors: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(clearError(null))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) history.push('/');\r\n    }, [isAuthenticated, history]);\r\n\r\n    const formValid = () => {\r\n        let valid = true;\r\n\r\n        Object.values(form.errors).forEach(\r\n            (field) => field.length > 0 && (valid = false)\r\n        );\r\n\r\n        // Check if form is filled\r\n        form.username === null && (valid = false);\r\n        form.password === null && (valid = false);\r\n\r\n        return valid;\r\n    };\r\n\r\n    const handleLogin = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            dispatch(\r\n                loginAsync({ username: form.username, password: form.password })\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {\r\n            target: { value, name },\r\n        } = e;\r\n\r\n        let { errors } = form;\r\n\r\n        switch (name) {\r\n            case 'username':\r\n                errors.username =\r\n                    value.length < 3\r\n                        ? 'Username is required and must be at least 3 characters long.'\r\n                        : '';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 3\r\n                        ? 'Password is required and must be at least 3 characters long.'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setForm((state: any) => ({ ...state, [name]: value, errors }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container__outer\">\r\n            <div className=\"auth-container\">\r\n                <h1 className=\"auth-container__title\">Welcome to Noteclone!</h1>\r\n                <p className=\"auth-container__subtitle\">\r\n                    Please login or register to open editor\r\n                </p>\r\n\r\n                <form className=\"auth-form\" onSubmit={handleLogin}>\r\n                    <input\r\n                        className={`auth-form__input ${\r\n                            form.errors.username.length > 0\r\n                                ? 'auth-form__input--error'\r\n                                : null\r\n                        }`}\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    {form.errors.username.length > 0 && (\r\n                        <div className=\"auth-form__error\">\r\n                            {form.errors.username}\r\n                        </div>\r\n                    )}\r\n\r\n                    <input\r\n                        className={`auth-form__input ${\r\n                            form.errors.password.length > 0\r\n                                ? 'auth-form__input--error'\r\n                                : null\r\n                        }`}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    {form.errors.password.length > 0 && (\r\n                        <div className=\"auth-form__error\">\r\n                            {form.errors.password}\r\n                        </div>\r\n                    )}\r\n                    <ErrorMessage />\r\n                    <div className=\"auth-form__action\">\r\n                        <ActiveButton\r\n                            active={loginRequest === 'pending'}\r\n                            variant=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Login\r\n                        </ActiveButton>\r\n                        <span>or</span>\r\n                        <Link to=\"/register\" className=\"link link--primary\">\r\n                            Create new account\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { INote } from '../@types/app';\r\nimport noteTemplate from '../assets/noteTemplate.json';\r\n\r\nexport const fetchAllNotes = async (): Promise<INote[]> => {\r\n    const response = await fetch('/api/notes', {\r\n        credentials: 'include',\r\n    });\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const addNote = async (): Promise<INote> => {\r\n    try {\r\n        const response = await fetch(`/api/notes`, {\r\n            method: 'post',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(noteTemplate),\r\n        });\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(error);\r\n    }\r\n};\r\n\r\nexport const updateNote = async (input: INote): Promise<INote> => {\r\n    const response = await fetch(`/api/notes/${input.id}`, {\r\n        method: 'put',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ ...input }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const deleteNote = async (id: number): Promise<INote> => {\r\n    const response = await fetch(`/api/notes/${id}`, {\r\n        method: 'delete',\r\n        credentials: 'include',\r\n    });\r\n    const result = await response.json();\r\n    return result;\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { INote, INoteState } from '../../@types/app';\r\nimport {\r\n    fetchAllNotes,\r\n    updateNote,\r\n    addNote,\r\n    deleteNote,\r\n} from '../../api/notes';\r\nimport { RootState } from '../../app/store';\r\n\r\nconst initialState: INoteState = {\r\n    notes: [],\r\n    selected: 0,\r\n    loadState: 'idle',\r\n    deleteState: 'idle',\r\n    updateState: 'idle',\r\n    saveState: 'idle',\r\n};\r\n\r\nexport const fetchNotesAsync = createAsyncThunk<INote[]>(\r\n    'notes/fetch',\r\n    async () => await fetchAllNotes()\r\n);\r\n\r\nexport const addNoteAsync = createAsyncThunk<INote>(\r\n    'notes/add',\r\n    async () => await addNote()\r\n);\r\n\r\nexport const deleteNoteAsync = createAsyncThunk<INote, number>(\r\n    'notes/delete',\r\n    async (noteId) => await deleteNote(noteId)\r\n);\r\n\r\nexport const saveNoteAsync = createAsyncThunk<INote, {title: string, text: string}>(\r\n    'notes/save',\r\n    async (note, { getState }) => {\r\n        const {\r\n            notes: { selected },\r\n        } = getState() as RootState;\r\n\r\n        return await updateNote({ id: selected, ...note });\r\n    }\r\n);\r\n\r\nconst noteSlice = createSlice({\r\n    name: 'notes',\r\n    initialState,\r\n    reducers: {\r\n        noteSelected(state, action: PayloadAction<number>) {\r\n            state.selected = action.payload;\r\n        },\r\n        noteUpdated(\r\n            { notes, selected },\r\n            action: PayloadAction<{ title: string; text: string }>\r\n        ) {\r\n            const currentNote = notes.find((note) => note.id === selected);\r\n\r\n            if (currentNote) {\r\n                notes[notes.indexOf(currentNote)].title = action.payload.title;\r\n                notes[notes.indexOf(currentNote)].text = action.payload.text;\r\n            } else;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchNotesAsync.pending, (state) => {\r\n            state.loadState = 'pending';\r\n        });\r\n        builder.addCase(fetchNotesAsync.fulfilled, (state, { payload }) => {\r\n            state.loadState = 'fulfilled';\r\n\r\n            if (payload.length > 0) {\r\n                state.notes = payload;\r\n                state.selected = state.notes[0].id;\r\n            }\r\n        });\r\n\r\n        builder.addCase(addNoteAsync.pending, (state) => {\r\n            state.saveState = 'pending';\r\n        });\r\n        builder.addCase(addNoteAsync.fulfilled, (state, { payload }) => {\r\n            state.saveState = 'fulfilled';\r\n            state.notes.unshift(payload);\r\n            state.selected = payload.id;\r\n        });\r\n\r\n        builder.addCase(deleteNoteAsync.pending, (state) => {\r\n            state.deleteState = 'pending';\r\n        });\r\n        builder.addCase(deleteNoteAsync.fulfilled, (state, { payload }) => {\r\n            state.deleteState = 'fulfilled';\r\n\r\n            // get removed note id from action (actually resolved promise)\r\n            const { id: noteId } = payload;\r\n\r\n            // determine the index of removed note in state\r\n            const noteIndex = state.notes.findIndex(\r\n                (search) => search.id === noteId\r\n            );\r\n\r\n            const lastIndex = state.notes.length - 1;\r\n\r\n            // determine wich note needs to become active (if top note remove - next, if bottom - top)\r\n            if (noteIndex !== lastIndex)\r\n                state.selected = state.notes[noteIndex + 1]?.id;\r\n            else {\r\n                state.selected = state.notes[noteIndex - 1]?.id;\r\n            }\r\n\r\n            // remove note from state\r\n            state.notes = state.notes.filter((note) => note.id !== noteId);\r\n        });\r\n    },\r\n});\r\n\r\nexport default noteSlice.reducer;\r\nexport const { noteSelected, noteUpdated } = noteSlice.actions;\r\n\r\nexport const selectNotes = (state: RootState) => state.notes.notes;\r\nexport const selectCurrentNote = (state: RootState) =>\r\n    state.notes.notes.find((note) => note.id === state.notes.selected)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { RootState } from '../app/store';\r\nimport { registerAsync } from '../features/users/usersSlice';\r\nimport ActiveButton from './ActiveButton';\r\nimport { ErrorMessage } from './ErrorMessage';\r\n\r\ninterface IFormState {\r\n    username: string | null;\r\n    password: string | null;\r\n    fullname: string | null;\r\n    errors: IFormStateErrors;\r\n}\r\n\r\ninterface IFormStateErrors {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport const RegisterPage = () => {\r\n    const [form, setForm] = useState<IFormState>({\r\n        username: null,\r\n        password: null,\r\n        fullname: null,\r\n        errors: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n    });\r\n\r\n    const { registerRequest } = useSelector((state: RootState) => state.users);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const formValid = () => {\r\n        let valid = true;\r\n\r\n        Object.values(form.errors).forEach(\r\n            (field) => field.length > 0 && (valid = false)\r\n        );\r\n\r\n        // Check if form is filled\r\n        form.username === null && (valid = false);\r\n        form.password === null && (valid = false);\r\n\r\n        return valid;\r\n    };\r\n\r\n    const register = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (formValid()) {\r\n            dispatch(\r\n                registerAsync({\r\n                    username: form.username,\r\n                    password: form.password,\r\n                    fullname: form.fullname,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {\r\n            target: { value, name },\r\n        } = e;\r\n\r\n        let { errors } = form;\r\n\r\n        switch (name) {\r\n            case 'username':\r\n                errors.username =\r\n                    value.length < 3\r\n                        ? 'Username is required and must be at least 3 characters long.'\r\n                        : '';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 3\r\n                        ? 'Password is required and must be at least 3 characters long.'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setForm((state: any) => ({ ...state, [name]: value, errors }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (registerRequest === 'fulfilled') {\r\n            // history.push('/login');\r\n        }\r\n    }, [registerRequest, history]);\r\n\r\n    return (\r\n        <div className=\"auth-container__outer\">\r\n            <div className=\"auth-container\">\r\n                <h1 className=\"auth-container__title\">Welcome to Noteclone!</h1>\r\n                <p className=\"auth-container__subtitle\">\r\n                    Please login or register to open editor\r\n                </p>\r\n\r\n                <form className=\"auth-form\" onSubmit={register}>\r\n                    <input\r\n                        className={`auth-form__input ${\r\n                            form.errors.username.length > 0\r\n                                ? 'auth-form__input--error'\r\n                                : null\r\n                        }`}\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    {form.errors.username.length > 0 && (\r\n                        <div className=\"auth-form__error\">\r\n                            {form.errors.username}\r\n                        </div>\r\n                    )}\r\n\r\n                    <input\r\n                        className={`auth-form__input ${\r\n                            form.errors.password.length > 0\r\n                                ? 'auth-form__input--error'\r\n                                : null\r\n                        }`}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    {form.errors.password.length > 0 && (\r\n                        <div className=\"auth-form__error\">\r\n                            {form.errors.password}\r\n                        </div>\r\n                    )}\r\n\r\n                    <input\r\n                        className=\"auth-form__input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Display name\"\r\n                        name=\"fullname\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <ErrorMessage />\r\n\r\n                    <div className=\"auth-form__action\">\r\n                        <ActiveButton\r\n                            active={registerRequest === 'pending'}\r\n                            variant=\"primary\"\r\n                        >\r\n                            Register\r\n                        </ActiveButton>\r\n                        <span>or</span>\r\n                        <Link to=\"/login\" className=\"link link--primary\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport sanitize from 'sanitize-html';\r\nimport { useNoteList } from '../../hooks/useNoteList';\r\n\r\nconst NoteList = () => {\r\n    const [notes, selected, setActive] = useNoteList();\r\n\r\n    return notes.length > 0 ? (\r\n        <Scrollbars\r\n            className=\"note-list\"\r\n            renderThumbVertical={(props) => (\r\n                <div {...props} className=\"note-list__thumb-vertical\" />\r\n            )}\r\n        >\r\n            {notes.map((note) => {\r\n                const sanitizedHtml = sanitize(note.text, {\r\n                    allowedTags: ['p', 'ul', 'ol', 'li'],\r\n                });\r\n\r\n                return (\r\n                    <div\r\n                        className={`note ${\r\n                            note.id === selected ? 'note--active' : ''\r\n                        }`}\r\n                        key={note.id}\r\n                        onClick={() => setActive(note.id)}\r\n                    >\r\n                        <div className=\"note__title\">\r\n                            <h2>{note.title}</h2>\r\n                        </div>\r\n                        {sanitizedHtml.length > 0 && (\r\n                            <div\r\n                                className=\"note__content\"\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: sanitizedHtml,\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                );\r\n            })}\r\n        </Scrollbars>\r\n    ) : (\r\n        <span className=\"note-list__message\">\r\n            You don't create any notes so far\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default NoteList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../app/store';\r\nimport { noteSelected } from '../features/notes/noteSlice';\r\n\r\nexport const useNoteList = () => {\r\n    const dispatch = useDispatch();\r\n    const { notes, selected } = useSelector((state: RootState) => state.notes);\r\n\r\n    const setActive = (id: number) => {\r\n        dispatch(noteSelected(id));\r\n    };\r\n\r\n    return [notes, selected, setActive] as const;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/blank-document.a2c3b89e.svg\";","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveNoteAsync, selectCurrentNote } from './noteSlice';\r\nimport { useNoteEditor } from '../../hooks/useNoteEditor';\r\nimport placeholderIcon from '../../assets/images/blank-document.svg';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst NoteEditor = () => {\r\n    const currentNote = useSelector(selectCurrentNote);\r\n\r\n    const dispatch = useDispatch();\r\n    const [editorState, setEditorState, title, setTitle] = useNoteEditor();\r\n\r\n    const saveNote = () => {\r\n        dispatch(saveNoteAsync({ title, text: editorState }));\r\n    };\r\n\r\n    // Hide editor if user doesnt have notes\r\n    if (!currentNote) return <div className=\"editor-placeholder\">\r\n        <img src={placeholderIcon} alt=\"Editor placeholder\" />\r\n    </div>\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}\r\n                onBlur={saveNote}\r\n                className=\"editor-content__title\"\r\n            />\r\n\r\n            <ReactQuill\r\n                value={editorState}\r\n                onChange={(value) => setEditorState(value)}\r\n                onBlur={() =>\r\n                    dispatch(saveNoteAsync({ title, text: editorState }))\r\n                }\r\n                style={{ flex: 1 }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NoteEditor;\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../app/store';\r\nimport { noteUpdated } from '../features/notes/noteSlice';\r\n\r\nexport const useNoteEditor = () => {\r\n    const { selected, notes } = useSelector((state: RootState) => state.notes);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editorState, setEditorState] = useState('');\r\n    const [title, setTitle] = useState('');\r\n\r\n    useMemo(() => {\r\n        const selectedNote = notes.find((note) => note.id === selected);\r\n\r\n        if (selectedNote) {\r\n            setEditorState(selectedNote.text);\r\n            setTitle(selectedNote.title);\r\n        } else;\r\n    }, [selected, notes]);\r\n\r\n    useEffect(() => {\r\n        dispatch(noteUpdated({ title, text: editorState }));\r\n    }, [editorState, title, dispatch]);\r\n\r\n    return [editorState, setEditorState, title, setTitle] as const;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RootState } from '../app/store';\r\nimport { RiQuillPenLine } from 'react-icons/ri';\r\nimport { BsTrashFill } from 'react-icons/bs';\r\nimport NoteList from '../features/notes/NoteList';\r\nimport {\r\n    addNoteAsync,\r\n    deleteNoteAsync,\r\n    selectCurrentNote,\r\n} from '../features/notes/noteSlice';\r\nimport NoteEditor from '../features/notes/NoteEditor';\r\nimport ActiveButton from './ActiveButton';\r\nimport { logoutAsync } from '../features/users/usersSlice';\r\n\r\nexport const EditorPage = () => {\r\n    const { isAuthenticated, user } = useSelector(\r\n        (state: RootState) => state.users\r\n    );\r\n    const { selected, saveState, deleteState } = useSelector(\r\n        (state: RootState) => state.notes\r\n    );\r\n    const currentNote = useSelector(selectCurrentNote);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) history.push('/login');\r\n    }, [isAuthenticated, history]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"editor-container\">\r\n                <header className=\"editor-header\">\r\n                    <div className=\"note-actions\">\r\n                        {currentNote && (\r\n                            <ActiveButton\r\n                                active={deleteState === 'pending'}\r\n                                rounded={true}\r\n                                variant=\"danger\"\r\n                                onClick={() =>\r\n                                    dispatch(deleteNoteAsync(selected))\r\n                                }\r\n                            >\r\n                                <BsTrashFill size={20} />\r\n                            </ActiveButton>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"user\">\r\n                        <p className=\"user__greeting\">\r\n                            Welcome, <strong>{user?.fullname}</strong>!\r\n                        </p>\r\n\r\n                        <a\r\n                            href=\"/\"\r\n                            className=\"user__action link link--primary\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                dispatch(logoutAsync());\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </a>\r\n                    </div>\r\n                </header>\r\n                <nav className=\"editor-nav\">\r\n                    <ActiveButton\r\n                        active={saveState === 'pending'}\r\n                        rounded={true}\r\n                        variant=\"primary\"\r\n                        onClick={() => dispatch(addNoteAsync())}\r\n                    >\r\n                        <RiQuillPenLine size={20} />\r\n                    </ActiveButton>\r\n                </nav>\r\n                <aside className=\"editor-list\">\r\n                    <NoteList />\r\n                </aside>\r\n                <main className=\"editor-content\">\r\n                    <NoteEditor />\r\n                </main>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { LoginPage } from './components/LoginPage';\r\nimport { fetchNotesAsync } from './features/notes/noteSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RegisterPage } from './components/RegisterPage';\r\nimport { EditorPage } from './components/EditorPage';\r\nimport { checkLoginAsync } from './features/users/usersSlice';\r\nimport { RootState } from './app/store';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const { isAuthenticated } = useSelector((state: RootState) => state.users);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(checkLoginAsync());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            dispatch(fetchNotesAsync());\r\n        }\r\n    }, [dispatch, isAuthenticated])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"app\">\r\n                <Switch>\r\n                    <Route path=\"/login\" component={LoginPage} />\r\n                    <Route path=\"/register\" component={RegisterPage} />\r\n                    <Route path=\"/\" component={EditorPage} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport noteReducer from '../features/notes/noteSlice';\r\nimport usersReducer from '../features/users/usersSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    notes: noteReducer,\r\n    users: usersReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}